namespace LanguageExt.Megaparsec;

/// <summary>
/// `ParseError` represents a parse error parametrised over the
/// stream type `S` and the custom data `E`.
/// 
/// `Semigroup` and `Monoid` instances of the data type allow us to merge
/// parse errors from different branches of parsing. When merging two
/// 'ParseError's, the longest match is preferred; if positions are the same,
/// custom data sets and collections of message items are combined. Note that
/// fancy errors take precedence over trivial errors in merging.
/// </summary>
/// <typeparam name="S"></typeparam>
/// <typeparam name="E"></typeparam>
public abstract record ParseError<S, E>(int Offset);

/// <summary>
/// Trivial errors, generated by the Megaparsec's machinery. The data
/// constructor includes the offset of error, unexpected token (if any),
/// and expected tokens.
/// </summary>
public record TrivialError<S, E>(int Offset, Option<ErrorItem<S>> Items1, Set<ErrorItem<S>> Items2)
    : ParseError<S, E>(Offset);

/// <summary>
/// Fancy, custom errors.
/// </summary>
public record FancyError<S, E>(int Offset, Set<ErrorFancy<E>> Items2)
    : ParseError<S, E>(Offset);
